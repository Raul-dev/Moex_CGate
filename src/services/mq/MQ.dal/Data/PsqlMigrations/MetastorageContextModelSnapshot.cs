// <auto-generated />
using System;
using MQ.dal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MQ.dal.Data.PsqlMigrations
{
    [DbContext(typeof(MetastorageContext))]
    partial class MetastorageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MQ.dal.Models.Codegen", b =>
                {
                    b.Property<int>("CodegenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codegen_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CodegenId"));

                    b.Property<short>("EnableType")
                        .HasColumnType("smallint")
                        .HasColumnName("enable_type");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("namespace");

                    b.Property<string>("Schema")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("schema");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("table_name");

                    b.HasKey("CodegenId");

                    b.ToTable("codegen");
                });

            modelBuilder.Entity("MQ.dal.Models.Metadata", b =>
                {
                    b.Property<Guid>("Nkey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Meta")
                        .HasColumnType("text")
                        .HasColumnName("meta");

                    b.Property<string>("Msg")
                        .HasColumnType("text")
                        .HasColumnName("msg");

                    b.Property<string>("Namespace")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("namespace");

                    b.Property<string>("NamespaceVer")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("namespace_ver");

                    b.Property<string>("Type")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Nkey");

                    b.ToTable("metadata");
                });

            modelBuilder.Entity("MQ.dal.Models.Metamap", b =>
                {
                    b.Property<short>("MetamapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("metamap_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("MetamapId"));

                    b.Property<string>("EtlQuery")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("etl_query");

                    b.Property<string>("ImportQuery")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("import_query");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable");

                    b.Property<string>("MessageType")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("message_type");

                    b.Property<string>("MsgKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("msg_key");

                    b.Property<string>("Namespace")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("namespace");

                    b.Property<string>("NamespaceVer")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("namespace_ver");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("table_name");

                    b.HasKey("MetamapId");

                    b.ToTable("metamap");
                });

            modelBuilder.Entity("MQ.dal.Models.Msgqueue", b =>
                {
                    b.Property<int>("SessionId")
                        .HasColumnType("integer")
                        .HasColumnName("session_id")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("MsgId")
                        .HasColumnType("uuid")
                        .HasColumnName("msg_id")
                        .HasColumnOrder(1);

                    b.Property<int>("MsgOrder")
                        .HasColumnType("integer")
                        .HasColumnName("buffer_id")
                        .HasColumnOrder(2);

                    b.Property<string>("Msg")
                        .HasColumnType("text")
                        .HasColumnName("msg");

                    b.Property<string>("MsgKey")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("msg_key");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dt_create");

                    b.HasKey("SessionId", "MsgId", "MsgOrder");

                    b.ToTable("msgqueue");
                });
#pragma warning restore 612, 618
        }
    }
}
